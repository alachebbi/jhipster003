webpackHotUpdate(0,{

/***/ "./src/main/webapp/app/chat/chat.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-lg-1\"></div>\n        <div class=\"col-md-3\">\n            <div class=\"list-group\">\n                <a href=\"#\" class=\"list-group-item disabled\">\n                    List of users\n                </a>\n                <div style=\"height: 400px; overflow-y: scroll\">\n                    <span *ngFor=\"let user of users\" (click)=\"onUserSelected(user)\" [ngClass]=\"{'chat-selected':user.active,'hasMsg':user.hasMsg}\" class=\"list-group-item\">{{user.login}}</span>\n\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-7 col-lg-7\">\n            <div class=\"panel panel-primary\">\n                <div class=\"panel-heading chat-header\" >\n                    <span class=\"glyphicon glyphicon-comment\"></span> Chat Room - [ {{receiver}} ]\n                </div>\n                <hr class=\"line\" />\n                <div  angular2-auto-scroll lock-y-offset=\"5\" observe-attributes class=\"panel-body chat-body\">\n                    <ul class=\"chat\">\n                        <div *ngFor=\"let msg of receiverMessage\">\n                            <li *ngIf=\"msg.senderName != sender\" class=\"left clearfix\"><span class=\"chat-img pull-left\">\n                            <img src=\"http://placehold.it/50/55C1E7/fff&text=U\" alt=\"User Avatar\" class=\"img-circle\" />\n                        </span>\n                                <div class=\"chat-body clearfix\">\n                                    <div class=\"header\">\n                                        <strong class=\"primary-font\">{{msg.senderName}}</strong> <small class=\"pull-right text-muted\">\n                                        <span class=\"glyphicon glyphicon-time\"></span>{{msg.createdDate | date :'medium'}}</small>\n                                    </div>\n                                    <div class=\"direct-chat-text\">\n                                    <p>\n                                        {{msg.msg}}\n                                    </p></div>\n                                </div>\n                            </li>\n                            <li *ngIf=\"msg.senderName == sender \"  class=\"right clearfix\"><span class=\"chat-img pull-right\">\n                            <img src=\"http://placehold.it/50/FA6F57/fff&text=ME\" alt=\"User Avatar\" class=\"img-circle\" />\n                        </span>\n                                <div class=\"chat-body clearfix\">\n                                    <div class=\"header\">\n                                        <small class=\" text-muted\"><span class=\"glyphicon glyphicon-time\"></span>{{msg.createdDate | date :'medium' }}</small>\n                                        <strong class=\"pull-right primary-font\">{{msg.senderName}}</strong>\n                                    </div>\n                                    <div class=\"direct-chat-text-left\">\n                                    <p>\n                                        {{msg.msg}}\n                                    </p></div>\n                                </div>\n                            </li>\n                        </div>\n                    </ul>\n                </div>\n\n                <div class=\"panel-footer chat-footer\">\n                    <form name=\"sendForm\" role=\"form\" novalidate  #sendForm=\"ngForm\">\n                        <div class=\"input-group\">\n                            <input id=\"btn-input\" type=\"text\" autocomplete=\"off\" [(ngModel)]=\"sendText\" name=\"text\"  required class=\"form-control input-sm\" placeholder=\"Type your message here...\" />\n                            <span class=\"input-group-btn\">\n                            <button [disabled]=\"sendForm.form.invalid\" (click)=\"sendMessage()\" class=\"btn btn-primary\" id=\"btn-chat\">Send</button>\n                        </span>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- DIRECT CHAT -->\n    <!-- DIRECT CHAT -->\n    <!--<div id=\"myDirectChat\" class=\"box box-warning direct-chat direct-chat-warning\">\n        <div class=\"box-header with-border\">\n            <h3 class=\"box-title\">Direct Chat</h3>\n            <div class=\"box-tools pull-right\">\n                <span data-toggle=\"tooltip\" title=\"3 New Messages\" class='badge bg-yellow'>3</span>\n                <button class=\"btn btn-box-tool\" data-widget=\"collapse\"><i class=\"fa fa-minus\"></i></button>\n                <button class=\"btn btn-box-tool\" data-toggle=\"tooltip\" title=\"Contacts\" data-widget=\"chat-pane-toggle\"><i class=\"fa fa-comments\"></i></button>\n                <button class=\"btn btn-box-tool\" data-widget=\"remove\"><i class=\"fa fa-times\"></i></button>\n            </div>\n        </div>&lt;!&ndash; /.box-header &ndash;&gt;\n        <div class=\"box-body\">\n\n            &lt;!&ndash; Conversations are loaded here &ndash;&gt;\n            <div class=\"direct-chat-messages\">\n\n                &lt;!&ndash; Message to the right &ndash;&gt;\n                <div *ngFor=\"let msg of receiverMessage\">\n                &lt;!&ndash; Message. Default to the left &ndash;&gt;\n                <div class=\"direct-chat-msg\">\n                    <li *ngIf=\"msg.senderName != sender\"  class='direct-chat-info clearfix'>\n                        <span class='direct-chat-name pull-right'>{{msg.senderName}}</span>\n                        <span class='direct-chat-timestamp pull-left'>{{msg.createdDate | date :'medium'}}</span>\n                    </li>&lt;!&ndash; /.direct-chat-info &ndash;&gt;\n                    <img class=\"direct-chat-img\" src=\"http://placehold.it/50/55C1E7/fff&text=U\" alt=\"message user image\" />&lt;!&ndash; /.direct-chat-img &ndash;&gt;\n                    <div class=\"direct-chat-text-left\">\n                        {{msg.msg}}\n                    </div>&lt;!&ndash; /.direct-chat-text &ndash;&gt;\n                    </div>&lt;!&ndash; /.direct-chat-msg &ndash;&gt;\n\n\n\n                    <div class=\"direct-chat-msg right\">\n                        <li *ngIf=\"msg.senderName == sender \" class='direct-chat-info clearfix'>\n                            <span class='direct-chat-name pull-right'>{{msg.senderName}}</span>\n                            <span class='direct-chat-timestamp pull-left'>{{msg.createdDate | date :'medium' }}</span>\n                        </li>&lt;!&ndash; /.direct-chat-info &ndash;&gt;\n                        <img class=\"direct-chat-img\" src=\"http://placehold.it/50/FA6F57/fff&text=ME\" alt=\"message user image\" />&lt;!&ndash; /.direct-chat-img &ndash;&gt;\n                        <div class=\"direct-chat-text\">\n                            {{msg.msg}}\n                        </div>&lt;!&ndash; /.direct-chat-text &ndash;&gt;\n                    </div>&lt;!&ndash; /.direct-chat-msg &ndash;&gt;\n\n\n\n\n                </div>&lt;!&ndash; /.direct-chat-msg &ndash;&gt;\n\n\n\n            </div>&lt;!&ndash;/.direct-chat-messages&ndash;&gt;\n            <div class=\"box-footer\">\n                <form name=\"sendForm\" role=\"form\" novalidate  #sendForm=\"ngForm\">\n                    <div class=\"input-group\">\n                        <input type=\"text\" [(ngModel)]=\"sendText\" name=\"message\" placeholder=\"Type Message ...\" class=\"form-control\"/>\n                        <span class=\"input-group-btn\">\n                        <button type=\"button\" [disabled]=\"sendForm.form.invalid\" (click)=\"sendMessage()\" class=\"btn btn-warning btn-flat\">Send</button>\n                      </span>\n                    </div>\n                </form>\n            </div>&lt;!&ndash; /.box-footer&ndash;&gt;\n-->\n"

/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,