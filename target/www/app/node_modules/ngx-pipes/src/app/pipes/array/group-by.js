"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = require("@angular/core");
var helpers_1 = require("../helpers/helpers");
var GroupByPipe = (function () {
    function GroupByPipe() {
    }
    GroupByPipe.prototype.transform = function (input, discriminator, delimiter) {
        if (discriminator === void 0) { discriminator = []; }
        if (delimiter === void 0) { delimiter = '|'; }
        if (!Array.isArray(input)) {
            return input;
        }
        return this.groupBy(input, discriminator, delimiter);
    };
    GroupByPipe.prototype.groupBy = function (list, discriminator, delimiter) {
        var _this = this;
        return list.reduce(function (acc, payload) {
            var key = _this.extractKeyByDiscriminator(discriminator, payload, delimiter);
            acc[key] = Array.isArray(acc[key])
                ? acc[key].concat([payload])
                : [payload];
            return acc;
        }, {});
    };
    GroupByPipe.prototype.extractKeyByDiscriminator = function (discriminator, payload, delimiter) {
        if (helpers_1.isFunction(discriminator)) {
            return discriminator(payload);
        }
        if (Array.isArray(discriminator)) {
            return discriminator.map(function (k) { return helpers_1.extractDeepPropertyByMapKey(payload, k); }).join(delimiter);
        }
        return helpers_1.extractDeepPropertyByMapKey(payload, discriminator);
    };
    return GroupByPipe;
}());
GroupByPipe = __decorate([
    core_1.Pipe({ name: 'groupBy' })
], GroupByPipe);
exports.GroupByPipe = GroupByPipe;
//# sourceMappingURL=group-by.js.map